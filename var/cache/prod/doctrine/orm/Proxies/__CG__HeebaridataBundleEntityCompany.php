<?php

namespace Proxies\__CG__\Heebari\dataBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Company extends \Heebari\dataBundle\Entity\Company implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'idCompany', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'idUser', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'businessName', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'turnover', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'numberOfEmployees', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'performanceMeasurementScore', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'estimatedEnterpriseValue', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'idBusinessField', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'idCompanyIndustry', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'idCompanySector', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'idCountry'];
        }

        return ['__isInitialized__', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'idCompany', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'idUser', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'businessName', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'turnover', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'numberOfEmployees', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'performanceMeasurementScore', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'estimatedEnterpriseValue', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'idBusinessField', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'idCompanyIndustry', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'idCompanySector', '' . "\0" . 'Heebari\\dataBundle\\Entity\\Company' . "\0" . 'idCountry'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Company $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdCompany()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdCompany();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCompany', []);

        return parent::getIdCompany();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdUser($idUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdUser', [$idUser]);

        return parent::setIdUser($idUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdUser', []);

        return parent::getIdUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setBusinessName($businessName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBusinessName', [$businessName]);

        return parent::setBusinessName($businessName);
    }

    /**
     * {@inheritDoc}
     */
    public function getBusinessName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBusinessName', []);

        return parent::getBusinessName();
    }

    /**
     * {@inheritDoc}
     */
    public function setTurnover($turnover)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTurnover', [$turnover]);

        return parent::setTurnover($turnover);
    }

    /**
     * {@inheritDoc}
     */
    public function getTurnover()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTurnover', []);

        return parent::getTurnover();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumberOfEmployees($numberOfEmployees)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumberOfEmployees', [$numberOfEmployees]);

        return parent::setNumberOfEmployees($numberOfEmployees);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumberOfEmployees()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumberOfEmployees', []);

        return parent::getNumberOfEmployees();
    }

    /**
     * {@inheritDoc}
     */
    public function setPerformanceMeasurementScore($performanceMeasurementScore)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPerformanceMeasurementScore', [$performanceMeasurementScore]);

        return parent::setPerformanceMeasurementScore($performanceMeasurementScore);
    }

    /**
     * {@inheritDoc}
     */
    public function getPerformanceMeasurementScore()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPerformanceMeasurementScore', []);

        return parent::getPerformanceMeasurementScore();
    }

    /**
     * {@inheritDoc}
     */
    public function setEstimatedEnterpriseValue($estimatedEnterpriseValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEstimatedEnterpriseValue', [$estimatedEnterpriseValue]);

        return parent::setEstimatedEnterpriseValue($estimatedEnterpriseValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getEstimatedEnterpriseValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEstimatedEnterpriseValue', []);

        return parent::getEstimatedEnterpriseValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdBusinessField(\Heebari\dataBundle\Entity\BusinessField $idBusinessField = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdBusinessField', [$idBusinessField]);

        return parent::setIdBusinessField($idBusinessField);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdBusinessField()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdBusinessField', []);

        return parent::getIdBusinessField();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdCompanyIndustry(\Heebari\dataBundle\Entity\CompanyIndustry $idCompanyIndustry = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdCompanyIndustry', [$idCompanyIndustry]);

        return parent::setIdCompanyIndustry($idCompanyIndustry);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdCompanyIndustry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCompanyIndustry', []);

        return parent::getIdCompanyIndustry();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdCompanySector(\Heebari\dataBundle\Entity\CompanySector $idCompanySector = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdCompanySector', [$idCompanySector]);

        return parent::setIdCompanySector($idCompanySector);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdCompanySector()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCompanySector', []);

        return parent::getIdCompanySector();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdCountry(\Heebari\dataBundle\Entity\Country $idCountry = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdCountry', [$idCountry]);

        return parent::setIdCountry($idCountry);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCountry', []);

        return parent::getIdCountry();
    }

}
