<?php

namespace Proxies\__CG__\Heebari\dataBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PopulationParameter extends \Heebari\dataBundle\Entity\PopulationParameter implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'idPopulationParameter', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'dateOfInformation', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'typeLocality', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'literacyRate', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'population', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'averageWealth', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'density', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'fecondityRate', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'idLocality', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'idPopulationDistribution'];
        }

        return ['__isInitialized__', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'idPopulationParameter', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'dateOfInformation', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'typeLocality', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'literacyRate', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'population', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'averageWealth', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'density', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'fecondityRate', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'idLocality', '' . "\0" . 'Heebari\\dataBundle\\Entity\\PopulationParameter' . "\0" . 'idPopulationDistribution'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PopulationParameter $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdPopulationParameter()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdPopulationParameter();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdPopulationParameter', []);

        return parent::getIdPopulationParameter();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateOfInformation($dateOfInformation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateOfInformation', [$dateOfInformation]);

        return parent::setDateOfInformation($dateOfInformation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateOfInformation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateOfInformation', []);

        return parent::getDateOfInformation();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeLocality($typeLocality)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeLocality', [$typeLocality]);

        return parent::setTypeLocality($typeLocality);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeLocality()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeLocality', []);

        return parent::getTypeLocality();
    }

    /**
     * {@inheritDoc}
     */
    public function setLiteracyRate($literacyRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLiteracyRate', [$literacyRate]);

        return parent::setLiteracyRate($literacyRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getLiteracyRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLiteracyRate', []);

        return parent::getLiteracyRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPopulation($population)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPopulation', [$population]);

        return parent::setPopulation($population);
    }

    /**
     * {@inheritDoc}
     */
    public function getPopulation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPopulation', []);

        return parent::getPopulation();
    }

    /**
     * {@inheritDoc}
     */
    public function setAverageWealth($averageWealth)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAverageWealth', [$averageWealth]);

        return parent::setAverageWealth($averageWealth);
    }

    /**
     * {@inheritDoc}
     */
    public function getAverageWealth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAverageWealth', []);

        return parent::getAverageWealth();
    }

    /**
     * {@inheritDoc}
     */
    public function setDensity($density)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDensity', [$density]);

        return parent::setDensity($density);
    }

    /**
     * {@inheritDoc}
     */
    public function getDensity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDensity', []);

        return parent::getDensity();
    }

    /**
     * {@inheritDoc}
     */
    public function setFecondityRate($fecondityRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFecondityRate', [$fecondityRate]);

        return parent::setFecondityRate($fecondityRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getFecondityRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFecondityRate', []);

        return parent::getFecondityRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdLocality(\Heebari\dataBundle\Entity\Collectivity $idLocality = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdLocality', [$idLocality]);

        return parent::setIdLocality($idLocality);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdLocality()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdLocality', []);

        return parent::getIdLocality();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdPopulationDistribution(\Heebari\dataBundle\Entity\PopulationDistribution $idPopulationDistribution = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdPopulationDistribution', [$idPopulationDistribution]);

        return parent::setIdPopulationDistribution($idPopulationDistribution);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdPopulationDistribution()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdPopulationDistribution', []);

        return parent::getIdPopulationDistribution();
    }

}
